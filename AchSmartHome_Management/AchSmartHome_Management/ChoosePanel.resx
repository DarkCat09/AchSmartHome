<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>